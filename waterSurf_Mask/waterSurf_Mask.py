import os
import argparse


def waterSurf_Mask(src: str, dst: str, date: str, tile: str) -> None:
    """
    :param src: The directory where the input image files are stored.
    :param dst: The directory where the output files will be saved.
    :param date: The date of the image.
    :param tile: The tile number of the image.
    :return: None

    This method generates a water surface mask for a given image file.
    The mask is generated by applying a mathematical expression
    The expression used is "1*(A<0)", where `A` represents the input image.

    Example usage:
        src = "/tmp/"
        dst = "/home/"
        date = "20210115"
        tile = "T31TCJ"
        waterSurf_Mask(src, dst, date, tile)
    """
    img_in = src + "NDPI" + "_" + date + "_" + tile + ".tif"
    expr = '\"1*(A<0)\"'
    mask_out = dst + "WaterSurf_mask_" + date + "_" + tile + ".tif"
    cmd_mask = "gdal_calc.py -A " + img_in + " --type=Byte --outfile=" + mask_out + " --calc=" + expr
    os.system(cmd_mask)
    return
    

if __name__ == "__main__":
    
    parser = argparse.ArgumentParser()
    parser.add_argument('--src', help='Source directory containing the input files.')
    parser.add_argument('--dst', help='Destination')
    parser.add_argument('--date', help='Date')
    parser.add_argument('--tile', help='Tile')
    
    args = parser.parse_args()
    waterSurf_Mask(args.src, args.dst, args.date, args.tile)
