apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: wr1-
spec:
  entrypoint: source
  parallelism: 2
  arguments:
    parameters:
      - name: pairs-list
        value: |
          [
            { "date": "20210715", "tile": "T31TCJ" },
            { "date": "20210815", "tile": "T31TCJ" },
            { "date": "20210915", "tile": "T31TCJ" }
          ]

  templates: 

  - name: generate-volume
    serviceAccountName: argo
    resource:
      action: create
      setOwnerReference: true
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          generateName: pvc-
        spec:
          accessModes: ['ReadWriteOnce']
          resources:
            requests:
              storage: 200Mi
    outputs:
      parameters:
        - name: pvc-name
          valueFrom:
            jsonPath: '{.metadata.name}'
              
  - name: ndpi
    serviceAccountName: argo
    inputs:
      parameters:
        - name: pvc-name
        - name: tile
        - name: date
      artifacts:
        - name: B3
          path: /tmp/input/SENTINEL2A_{{inputs.parameters.date}}-105852-555_L2A_{{inputs.parameters.tile}}_C_V2-2_FRE_B3.tif
          archive:
            none: {}
          s3:
            key: input/SENTINEL2A_{{inputs.parameters.date}}-105852-555_L2A_{{inputs.parameters.tile}}_C_V2-2_FRE_B3.tif
        - name: B11
          path: /tmp/input/SENTINEL2A_{{inputs.parameters.date}}-105852-555_L2A_{{inputs.parameters.tile}}_C_V2-2_FRE_B11.tif
          archive:
            none: {}
          s3:
            key: input/SENTINEL2A_{{inputs.parameters.date}}-105852-555_L2A_{{inputs.parameters.tile}}_C_V2-2_FRE_B11.tif
    volumes:
      - name: workdir
        persistentVolumeClaim:
          claimName: "{{inputs.parameters.pvc-name}}"
    container:
      image: localhost:5000/orfeo:latest
      command: [python3, /usr/local/bin/ndpi.py]
      args: [--src, "{{inputs.artifacts.B3.path}}", "{{inputs.artifacts.B11.path}}", --dst, "/home/", --date, "{{inputs.parameters.date}}", --tile, "{{inputs.parameters.tile}}"]
      volumeMounts:
        - name: workdir
          mountPath: /home
          
  - name: water-mask
    serviceAccountName: argo
    inputs:
      parameters:
        - name: pvc-name
        - name: tile
        - name: date
    volumes:
      - name: workdir
        persistentVolumeClaim:
          claimName: "{{inputs.parameters.pvc-name}}"
    container:
      image: localhost:5000/osgeo:latest
      command: [python3, waterSurf_Mask.py, --src, "/tmp/", --dst, "/tmp/", --date, "{{inputs.parameters.date}}", --tile, "{{inputs.parameters.tile}}"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp
 #   outputs:
 #     artifacts:
 #     - name: output-art
 #       path: /home
 #       archive:
 #         none: {}
 #       s3:
 #         key: output

  - name: vectorize
    serviceAccountName: argo
    inputs:
      parameters:
        - name: pvc-name
        - name: tile
        - name: date
      artifacts:
        - name: inpe
          path: /tmp/inpe/{{inputs.parameters.tile}}.gpkg
          archive:
            none: { }
          s3:
            key: input/{{inputs.parameters.tile}}.gpkg
    volumes:
      - name: workdir
        persistentVolumeClaim:
          claimName: "{{inputs.parameters.pvc-name}}"
    container:
      image: localhost:5000/riogeo:latest
      command: [python, vectorize.py, --inpe, "{{inputs.artifacts.inpe.path}}", --src, "/tmp/WaterSurf_mask_{{inputs.parameters.date}}_{{inputs.parameters.tile}}.tif", --dst, "/home/{{inputs.parameters.tile}}_{{inputs.parameters.date}}.gpkg", --date, "{{inputs.parameters.date}}", --tile, "{{inputs.parameters.tile}}"]
      volumeMounts:
        - name: workdir
          mountPath: /tmp/
    outputs:
      artifacts:
      - name: output-art
        path: /home
        archive:
          none: {}
        s3:
          key: output
          
  - name: base-pipeline
    serviceAccountName: argo
    inputs:
      parameters:
       - name: tile
       - name: date
    steps:
    - - name: generate-volume
        template: generate-volume
    - - name: ndpi
        template: ndpi
        arguments:
          parameters:
           - name: pvc-name
             value: "{{steps.generate-volume.outputs.parameters.pvc-name}}"
           - name: tile
             value: "{{inputs.parameters.tile}}"
           - name: date
             value: "{{inputs.parameters.date}}"
    - - name: water-mask
        template: water-mask
        arguments:
          parameters:
           - name: pvc-name
             value: "{{steps.generate-volume.outputs.parameters.pvc-name}}"
           - name: tile
             value: "{{inputs.parameters.tile}}"
           - name: date
             value: "{{inputs.parameters.date}}"
    - - name: vectorize
        template: vectorize
        arguments:
          parameters:
            - name: pvc-name
              value: "{{steps.generate-volume.outputs.parameters.pvc-name}}"
            - name: tile
              value: "{{inputs.parameters.tile}}"
            - name: date
              value: "{{inputs.parameters.date}}"

  - name: source
    serviceAccountName: argo
    inputs:
      parameters:
        - name: pairs-list
    steps:
    - - name: base-pipeline
        template: base-pipeline
        arguments:
          parameters:
            - name: tile
              value: "{{item.tile}}"
            - name: date
              value: "{{item.date}}"
        withParam: "{{inputs.parameters.pairs-list}}"
