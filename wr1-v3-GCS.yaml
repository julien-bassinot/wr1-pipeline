apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: wr1
  generateName: wr1-
spec:
  entrypoint: source
  parallelism: 1
  arguments:
    parameters:
      - name: pairs-list
        value: |
          [
            { "date": "20220115", "tile": "T31TCJ" }
          ]
# { "date": "20231015", "tile": "T31TCJ" }

      - name: registry
        valueFrom:
          configMapKeyRef:
            name: argo-workflows-config-map
            key: registry
      - name: private-bucket
        valueFrom:
          configMapKeyRef:
            name: argo-workflows-config-map
            key: private-bucket
      - name: super-resolution-bucket
        valueFrom:
          configMapKeyRef:
            name: argo-workflows-config-map
            key: super-resolution-bucket


  templates:

  - name: ndpi
    podSpecPatch: '{"initContainers":[{"name":"init", "resources":{"limits":{"cpu": "1250m"}}}]}'
    inputs:
      parameters:
        - name: tile
        - name: date
      artifacts:
        - name: sr_folder
          path: /workdir/sr_folder
          gcs:
            # TODO change name generated by SR
            key: SENTINEL2X_{{inputs.parameters.date}}-000000-000_L3A_{{inputs.parameters.tile}}_D.tgz
            bucket: "{{workflow.parameters.super-resolution-bucket}}"
    container:
      imagePullPolicy: Always # To remove as soon versions are defined
      image: "{{workflow.parameters.registry}}/orfeo:latest"
      command: [python3, /app/ndpi.py]
      args: [--src, "{{inputs.artifacts.sr_folder.path}}/R5m/B3_5m.tif", "{{inputs.artifacts.sr_folder.path}}/R5m/B11_5m.tif", --dst, "{{outputs.artifacts.raster_ndpi.path}}"]
      resources:
        requests:
          cpu: "500m"
          memory: "500Mi"
      volumeMounts:
      - name: workdir
        mountPath: /workdir
    outputs:
      artifacts:
      - name: raster_ndpi
        path: /workdir/NDPI.tif
        archive:
          none: {}
        gcs:
          key: tmp/NDPI_{{inputs.parameters.date}}_{{inputs.parameters.tile}}.tif
          bucket: "{{workflow.parameters.private-bucket}}"
    volumes:
      - name: workdir
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                type: ephemeral
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: "20Gi"

  - name: water-mask
    inputs:
      parameters:
        - name: date
        - name: tile
      artifacts:
        - name: raster_ndpi
          path: /tmp/NDPI.tif
          archive:
            none: {}
          gcs:
            key: tmp/NDPI_{{inputs.parameters.date}}_{{inputs.parameters.tile}}.tif
            bucket: "{{workflow.parameters.private-bucket}}"
    container:
      imagePullPolicy: Always # To remove as soon versions are defined
      image: "{{workflow.parameters.registry}}/osgeo:latest"
      command: [python3, /app/waterSurf_Mask.py]
      args: [--src, "{{inputs.artifacts.raster_ndpi.path}}", --dst, "{{outputs.artifacts.raster_mask.path}}"]
      resources:
        requests:
          cpu: "500m"
          memory: "1Gi"
          ephemeral-storage: "3Gi"
    outputs:
      artifacts:
      - name: raster_mask
        path: /tmp/MASK.tif
        archive:
          none: {}
        gcs:
          key: tmp/WaterSurf_mask_{{inputs.parameters.date}}_{{inputs.parameters.tile}}.tif
          bucket: "{{workflow.parameters.private-bucket}}"

  - name: vectorize
    inputs:
      parameters:
        - name: tile
        - name: date
      artifacts:
        - name: inpe_db
          path: /tmp/inpe.gpkg
          archive:
            none: {}
          gcs:
            key: input/{{inputs.parameters.tile}}.gpkg
            bucket: "{{workflow.parameters.private-bucket}}"
        - name: raster_mask
          path: /tmp/MASK.tif
          archive:
            none: {}
          gcs:
            key: tmp/WaterSurf_mask_{{inputs.parameters.date}}_{{inputs.parameters.tile}}.tif
            bucket: "{{workflow.parameters.private-bucket}}"
    container:
      imagePullPolicy: Always # To remove as soon versions are defined
      image: "{{workflow.parameters.registry}}/riogeo:latest"
      command: [python, /app/vectorize.py]
      args: [--inpe, "{{inputs.artifacts.inpe_db.path}}", --src, "{{inputs.artifacts.raster_mask.path}}", --dst, "{{outputs.artifacts.wr1_db.path}}", --date, "{{inputs.parameters.date}}", --tile, "{{inputs.parameters.tile}}"]
      resources:
        requests:
          cpu: "500m"
          memory: "2Gi"
    outputs:
      artifacts:
      - name: wr1_db
        path: /tmp/db.gpkg
        archive:
          none: {}
        gcs:
          key: output/{{inputs.parameters.tile}}_{{inputs.parameters.date}}.gpkg
          bucket: "{{workflow.parameters.private-bucket}}"

  - name: base-pipeline
    inputs:
      parameters:
        - name: tile
        - name: date
    steps:
    - - name: ndpi
        template: ndpi
        arguments:
          parameters:
            - name: tile
              value: "{{inputs.parameters.tile}}"
            - name: date
              value: "{{inputs.parameters.date}}"
    - - name: water-mask
        template: water-mask
        arguments:
          parameters:
            - name: tile
              value: "{{inputs.parameters.tile}}"
            - name: date
              value: "{{inputs.parameters.date}}"
    - - name: vectorize
        template: vectorize
        arguments:
          parameters:
            - name: tile
              value: "{{inputs.parameters.tile}}"
            - name: date
              value: "{{inputs.parameters.date}}"

  - name: source
    inputs:
      parameters:
        - name: pairs-list
    steps:
    - - name: base-pipeline
        template: base-pipeline
        arguments:
          parameters:
            - name: tile
              value: "{{item.tile}}"
            - name: date
              value: "{{item.date}}"
        withParam: "{{inputs.parameters.pairs-list}}"